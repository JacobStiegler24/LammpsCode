

############################################################################################
# Variables
# sigma = 22.25 nm
# epsilon = 2.25E-20 J
# 1 lj force unit = 1 pN
# 1 lj spring constant = 0.5 micro N/m

# .sh file variables:
# variable K_r equal 3.124
# variable K_r_prime equal 10
# variable K_theta equal 7.785
# variable stretch_force equal 10.0
# variable seed equal 54654652     # random number seed

variable R0 equal 1
variable R0_prime equal 2
variable unfold_critical_distance equal 1.5
variable fold_critical_distance equal 0.3
variable reaction_upperbound equal 50
variable temp equal 1.0

variable run_no equal 100000
variable time_step equal 0.0001 
variable dumpfreq equal 1
#########################################################################################

units lj                # Lennard-Jones units
atom_style angle        # atoms with bonds and angles

boundary p p p          # all boundaries are periodic

neighbor 1.9 bin
neigh_modify every 1 delay 1 check yes

read_data input/initial_configuration.txt

labelmap atom 1 D 2 E
labelmap bond 1 fold 2 unfold

#labelmap atom 1 D 2 E
group reaction_group id 1
group extension_group id 3  
group motion_group id 2 3
group rxn-group type D E

pair_style lj/cut 10.0
pair_coeff * * 0.0 0.0

bond_style hybrid harmonic fene         # harmonic bond
bond_coeff 1 harmonic ${K_r} ${R0}     # args: bond type, bond style, K, R0
bond_coeff 2 fene ${K_r_prime} ${R0_prime} 0.0 0.0     # args: bond type, bond style, K, R0, epsilon, sigma

# bond_style harmonic       # harmonic bond
# bond_coeff 1 ${K_r} ${R0}
# bond_coeff 2 ${K_r_prime} ${R0_prime}

angle_style harmonic             # harmonic bond angular component
angle_coeff 1 ${K_theta} 180.0   # args: angle type, K, theta0

#exclude atom 1
fix 1 motion_group nve                           # NVE integrator    
fix 2 all langevin ${temp} ${temp} 1.0 ${seed}  # Langevin thermostat

# variable fz equal ramp(0,${stretch_force})
# fix extension_force extension_group addforce 0.0 0.0 v_fz
fix extension_force extension_group addforce 0.0 0.0 ${stretch_force}

############################################################################################
# chatgpt, explain the terms
#fix keepcenter all recenter INIT INIT INIT
############################################################################################

timestep ${time_step}                        # time step in picoseconds

############################################################################################
# Print to file commands  
compute bondlen all bond/local dist
compute btype all property/local btype
dump bondlen_dump extension_group local ${dumpfreq} ${outdir}/bondlengths.dump c_btype c_bondlen

# compute sumz all reduce sum z
# variable z equal c_sumz
# fix mySumZ all print ${dumpfreq} "${z}" file ${outdir}/sumZ.out screen no

compute myAngle all angle/local theta
dump angle_dump all local ${dumpfreq} ${outdir}/angles.dump c_myAngle

dump dum1 all custom ${dumpfreq} ${outdir}/dum1.dump id type x y z ix iy iz
write_data output/datafile.data

# group D1 id 1
# group D2 id 3
# group E id 2

# compute cD1 D1 com
# compute cD2 D2 com
# compute cE  E  com


# variable dx1 equal c_cD1[1]-c_cE[1]
# variable dy1 equal c_cD1[2]-c_cE[2]
# variable dz1 equal c_cD1[3]-c_cE[3]
# variable dx2 equal c_cD2[1]-c_cE[1]
# variable dy2 equal c_cD2[2]-c_cE[2]
# variable dz2 equal c_cD2[3]-c_cE[3]
# variable RE equal sqrt(v_dx1*v_dx1+v_dy1*v_dy1+v_dz1*v_dz1) #+ sqrt(v_dx2*v_dx2+v_dy2*v_dy2+v_dz2*v_dz2)

# fix myRG2file all print 100 "${RE}  "  file ${outdir}/bond_length.out screen no
############################################################################################

############################################################################################
# Molecule unfolding/folding

molecule folded input/m_folded.txt
molecule unfolded input/m_unfolded.txt
molecule D1E2D input/m_D1E2D.txt
molecule D2E1D input/m_D2E1D.txt

fix rxn1 all bond/react & 
  react DEUnfold all 1 ${unfold_critical_distance} ${reaction_upperbound} folded D2E1D input/mapDE.txt prob 0.5 ${seed} &
  react EDUnfold all 1 ${unfold_critical_distance} ${reaction_upperbound} folded D1E2D input/mapED.txt prob 0.5 ${seed} &
  react DEUnfoldFull all 1 ${unfold_critical_distance} ${reaction_upperbound} D1E2D unfolded input/mapDE.txt prob 0.5 ${seed} &
  react EDUnfoldFull all 1 ${unfold_critical_distance} ${reaction_upperbound} D2E1D unfolded input/mapED.txt prob 0.5 ${seed} &
  react DEFold all 1 0 ${fold_critical_distance} unfolded D1E2D input/mapDE.txt prob 0.5 ${seed} &
  react EDFold all 1 0 ${fold_critical_distance} unfolded D2E1D input/mapED.txt prob 0.5 ${seed} &
  react DEFoldFull all 1 0 ${fold_critical_distance} D2E1D folded input/mapDE.txt prob 0.5 ${seed} &
  react EDFoldFull all 1 0 ${fold_critical_distance} D1E2D folded input/mapED.txt prob 0.5 ${seed}


# molecule fold m_fold.txt
# molecule unfold m_unfold.txt

# # fix rxn2 all bond/react &
#   react rxn-unfold all 1 ${unfold_critical_distance} ${reaction_upperbound} fold unfold map.txt prob 0.5 ${seed} &
#   react rxn-fold all 1 0 ${fold_critical_distance} unfold fold map.txt prob 0.1 ${seed}

############################################################################################

run ${run_no}  

# unfix extension_force

# run ${run_no}  # run again to allow the system to relax after the reactions

write_restart final.restart

# statistics
# file structure
# angular potential
# folding/unfolding efficiency